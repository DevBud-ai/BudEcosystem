name: Release App

on:
  workflow_dispatch:
    inputs:
      version:
        description: App Version
        required: true
        default: 0.1.0
      is-draft:
        description: 'Draft Release?'
        type: boolean
        required: true
        default: true
      is-pre-release:
        description: 'Pre Release? (labeled as "PreRelease")'
        type: boolean
        required: true
        default: true

permissions:
  actions: write
  contents: write
  security-events: write

concurrency:
  # The concurrency group contains the workflow name and the branch name for
  # pull requests or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  CI_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
  NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
  NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

jobs:
  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      # todo: cache yarn deps
      - name: Install dependencies
        run: yarn install # that's right, yarn
        working-directory: apps/electron

      - name: Prepare for make
        working-directory: apps/electron
        run: yarn before-make

      - name: make build
        run: yarn make-macos-arm64
        working-directory: apps/electron

      - name: Save arm64 artifacts
        run: |
          mkdir -p builds
          mv apps/electron/out/make/AFFiNE.dmg ./builds/affine-darwin-arm64-${{ github.event.inputs.version }}.dmg

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: affine-darwin-arm64-builds
          path: builds

  release:
    needs: [build-macos-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Download MacOS arm64 Artifacts
        uses: actions/download-artifact@v3
        with:
          name: affine-darwin-arm64-builds
          path: ./

      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Desktop/Android APP ${{ github.event.inputs.version }}
          body: 'TODO: Add release notes here'
          draft: ${{ github.event.inputs.is-draft }}
          prerelease: ${{ github.event.inputs.is-pre-release }}
          files: |
            ./VERSION
            ./*.zip
            ./*.dmg
            ./*.exe
            ./*.nupkg
            ./RELEASES
            ./*.AppImage
            ./*.apk
