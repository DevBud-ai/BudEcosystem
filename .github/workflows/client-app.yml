name: Release App

on:
  workflow_dispatch:
    inputs:
      version:
        description: App Version
        required: false
        default: 0.1.0

permissions:
  actions: write
  contents: write
  security-events: write

concurrency:
  # The concurrency group contains the workflow name and the branch name for
  # pull requests or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v2
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `affine-client-v${{ github.event.inputs.version }}`,
              name: `AFFiNE Client v${{ github.event.inputs.version }}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-latest, ubuntu-latest, windows-latest]
        platform: [macos-latest] # TODO: add other platforms

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - run: yarn install # that's right, yarn
        working-directory: apps/electron

      - name: Make Electron
        env:
          CI_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn make
